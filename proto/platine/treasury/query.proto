syntax = "proto3";
package platinenetwork.platine.treasury;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "platine/treasury/params.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/platine-network/platine/x/treasury/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/platine/treasury/params";
  }
  // Returns the current minting epoch provisions value
	rpc EpochProvision(QueryEpochProvisionRequest) returns (QueryEpochProvisionResponse) {
		option (google.api.http).get = "/platine/treasury/epoch_provision";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryEpochProvisionRequest {
}

message QueryEpochProvisionResponse {
	bytes epoch_provision = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}


// this line is used by starport scaffolding # 3
